{"version":3,"sources":["services/tasksServices.js","components/Header.jsx","components/TasksTable.jsx","App.jsx","index.js"],"names":["mockedTasks","id","uuidv4","toString","Priority","AssignedTo","CreatedBy","CreatedDateTime","Date","toLocaleString","State","Header","className","TasksTable","tasks","tableBody","map","task","index","TableRow","Table","striped","responsive","App","useState","setTasks","fetchData","useRef","current","useEffect","ReactDOM","render","document","getElementById"],"mappings":"yMACIA,EAAc,CAChB,CACEC,GAAIC,cAASC,WACbC,SAAU,kBACVC,WAAY,kDACZC,UAAW,kDACXC,gBAAiB,IAAIC,KAAK,KAAK,EAAE,IAAIC,iBACrCC,MAAO,oBAET,CACET,GAAIC,cAASC,WACbE,WAAY,kDACZD,SAAU,eACVE,UAAW,kDACXC,gBAAiB,IAAIC,KAAK,KAAK,EAAE,IAAIC,iBACrCC,MAAO,4BAET,CACET,GAAIC,cAASC,WACbC,SAAU,mBACVC,WAAY,gCACZC,UAAW,kDACXC,iBAAiB,IAAIC,MAAOC,iBAC5BC,MAAO,sBAET,CACET,GAAIC,cAASC,WACbC,SAAU,oBACVC,WAAY,kDACZC,UAAW,kDACXC,gBAAiB,IAAIC,KAAK,KAAK,EAAE,IAAIC,iBACrCC,MAAO,oBAET,CACET,GAAIC,cAASC,WACbC,SAAU,sBACVC,WAAY,iCACZC,UAAW,kDACXC,gBAAiB,IAAIC,KAAK,KAAK,EAAE,IAAIC,iBACrCC,MAAO,6B,OCtCEC,EAAS,kBACpB,qBAAKC,UAAU,SAAf,SACE,qE,OCDSC,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAyBrBC,EAAYD,EAAME,KAAI,SAACC,EAAMC,GAAP,OAdX,SAACD,EAAMC,GAAP,OACf,qBAAgBN,UAAWM,EAAQ,IAAM,EAAI,MAAQ,OAArD,UACE,6BAAKD,EAAKZ,aACV,6BAAKY,EAAKb,WACV,6BAAKa,EAAKX,YACV,6BAAKW,EAAKV,kBACV,6BACE,qBAAKK,UAAU,MAAf,SACE,qBAAKA,UAAU,WAAf,SAA2BK,EAAKP,cAP7BQ,GAakCC,CAASF,EAAMC,MAE5D,OACE,qBAAKN,UAAU,YAAf,SACE,eAACQ,EAAA,EAAD,CAAOC,SAAO,EAACC,WAAW,KAA1B,UACE,gCA5BJ,+BACE,6CACA,0CACA,2CACA,+CACA,4CAwBE,gCAAQP,UCFDQ,G,YAzBH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcW,EAAd,KACMC,EAAYC,kBAAO,eAWzB,OATAD,EAAUE,QAAU,WAElBH,EH+B6BzB,IG5B/B6B,qBAAU,WACRH,EAAUE,YACT,CAACF,IAGF,sBAAKd,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CACEE,MAAOA,WCrBjBgB,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.888f27f8.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nlet mockedTasks = [\n  {\n    id: uuidv4().toString(),\n    Priority: \"Critical ⚠\",\n    AssignedTo: \"👩🏽‍🦰 Mari\",\n    CreatedBy: \"Amin 👨🏻‍💼\",\n    CreatedDateTime: new Date(2021,4,15).toLocaleString(),\n    State: \"Completed ✅\",\n  },\n  {\n    id: uuidv4().toString(),\n    AssignedTo: \"Amin 👨🏻‍💼\",\n    Priority: \"Major ☢\",\n    CreatedBy: \"Amin 👨🏻‍💼\",\n    CreatedDateTime: new Date(2021,4,24).toLocaleString(),\n    State: \"In Progress 🕐\",\n  },\n  {\n    id: uuidv4().toString(),\n    Priority: \"Low 🟡\",\n    AssignedTo: \"🧑🏼 Juan\",\n    CreatedBy: \"Amin 👨🏻‍💼\",\n    CreatedDateTime: new Date().toLocaleString(),\n    State: \"To Do ❗❗\",\n  },\n  {\n    id: uuidv4().toString(),\n    Priority: \"High 🔴\",\n    AssignedTo: \"👱🏽‍♂️ Jose\",\n    CreatedBy: \"Amin 👨🏻‍💼\",\n    CreatedDateTime: new Date(2021,4,12).toLocaleString(),\n    State: \"Completed ✅\",\n  },\n  {\n    id: uuidv4().toString(),\n    Priority: \"Medium 🟠\",\n    AssignedTo: \"👩🏻 Paula\",\n    CreatedBy: \"Amin 👨🏻‍💼\",\n    CreatedDateTime: new Date(2021,4,22).toLocaleString(),\n    State: \"In Progress 🕐\",\n  }\n];\n\nexport const getAllTasks = () => mockedTasks;\n\nexport const getTask = (data) =>\n  mockedTasks.find((task) => task.id === data.id);","import React from \"react\";\n\nexport const Header = () => (\n  <div className=\"header\">\n    <h1>Code Noobs Simple Web App ⚡</h1>\n  </div>\n);\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\n\nexport const TasksTable = ({ tasks }) => {\n  const TableHeader = () => (\n    <tr>\n      <th>Assigned to</th>\n      <th>Priority</th>\n      <th>CreatedBy</th>\n      <th>Creation date</th>\n      <th>State</th>\n    </tr>\n  );\n\n  const TableRow = (task, index) => (\n    <tr key={index} className={index % 2 === 0 ? \"odd\" : \"even\"}>\n      <td>{task.AssignedTo}</td>\n      <td>{task.Priority}</td>\n      <td>{task.CreatedBy}</td>\n      <td>{task.CreatedDateTime}</td>\n      <td>\n        <div className=\"row\">\n          <div className=\"col-md-8\">{task.State}</div>\n        </div>\n      </td>\n    </tr>\n  );\n\n  const tableBody = tasks.map((task, index) => TableRow(task, index));\n\n  return (\n    <div className=\"container\">\n      <Table striped responsive=\"lg\">\n        <thead>{TableHeader()}</thead>\n        <tbody>{tableBody}</tbody>\n      </Table>\n    </div>\n  );\n};\n","import { getAllTasks } from \"./services/tasksServices\";\nimport { Header } from \"./components/Header\";\nimport { TasksTable } from \"./components/TasksTable\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const fetchData = useRef(() => {});\n\n  fetchData.current = () => {\n    const allTasks = getAllTasks();\n    setTasks(allTasks);\n  };\n\n  useEffect(() => {\n    fetchData.current();\n  }, [fetchData]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"row mrgnbtm\">\n        <TasksTable\n          tasks={tasks}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}